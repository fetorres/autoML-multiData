/*
 * ARX: Powerful Data Anonymization
 * Copyright 2012 - 2016 Fabian Prasser, Florian Kohlmayer and contributors
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.deidentifier.arx.test;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.Collection;

import org.deidentifier.arx.ARXConfiguration;
import org.deidentifier.arx.AttributeType.Hierarchy;
import org.deidentifier.arx.Data;
import org.deidentifier.arx.DataHandle;
import org.deidentifier.arx.criteria.HierarchicalDistanceTCloseness;
import org.deidentifier.arx.criteria.KAnonymity;
import org.deidentifier.arx.criteria.RecursiveCLDiversity;
import org.deidentifier.arx.metric.Metric;
import org.deidentifier.arx.metric.Metric.AggregateFunction;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

/**
 * Tests for the NDS metric.
 *
 * @author Fabian Prasser
 * @author Florian Kohlmayer
 */
@RunWith(Parameterized.class)
public class TestUtilityMetricsLoss extends AbstractAnonymizationTest {
    
    /**
     * 
     *
     * @return
     * @throws IOException
     */
    @Parameters(name = "{index}:[{0}]")
    public static Collection<Object[]> cases() throws IOException {
        return Arrays.asList(new Object[][] {
                                              
                                              /* 0 */{ new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.8635899476, 0.8388227381, 0.836307274, 0.8176580472, 0.7743518334, 0.7743518334, 0.7743518334, 0.7743518334]", new int[] { 0, 3, 0, 0, 2, 1, 1, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new KAnonymity(5)), "occupation", "./data/adult.csv", "[0.297248193, 0.29678055, 0.1297659306, 0.1297659306, 0.1297659306, 0.1297659306, 0.1297659306, 0.1297659306]", new int[] { 0, 3, 0, 0, 1, 0, 0, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.8635899476, 0.8388227381, 0.836307274, 0.8176580472, 0.7743518334, 0.7743518334, 0.7743518334, 0.7743518334]", new int[] { 0, 3, 0, 0, 2, 1, 1, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.4141161537, 0.4048463298, 0.345266671, 0.3371819112, 0.1797626152, 0.1797626152, 0.1797626152, 0.1797626152]", new int[] { 0, 3, 0, 0, 1, 1, 1, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.3095956833, 0.0487699754, 0.0487699754]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[1.0, 1.0, 0.3036444864, 0.2253280098, 0.0413434122, 0.0413434122, 0.0413434122, 0.0413434122]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.3095956833, 0.0487699754, 0.0487699754]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[1.0, 1.0, 0.3036444864, 0.2253280098, 0.0413434122, 0.0413434122, 0.0413434122, 0.0413434122]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.3095956833, 0.0487699754, 0.0487699754]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.3095956833, 0.0487699754, 0.0487699754]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              /* 10 */{ new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.271754194, 0.0, 0.0]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[1.0, 1.0, 0.271754194, 0.1919191919, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.271754194, 0.0, 0.0]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[1.0, 1.0, 0.271754194, 0.1919191919, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.271754194, 0.0, 0.0]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.271754194, 0.0, 0.0]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              /* 20 */{ new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.6348915854, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995]", new int[] { 0, 1, 0, 0, 0, 0, 0, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)), "occupation", "./data/adult.csv", "[0.2300344804, 0.1976148796, 0.1976148796, 0.1976148796, 0.1976148796, 0.1976148796, 0.1976148796, 0.1976148796]", new int[] { 0, 1, 0, 0, 0, 0, 0, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.6348915854, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995]", new int[] { 0, 1, 0, 0, 0, 0, 0, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.3414163517, 0.2755579868, 0.2755579868, 0.2755579868, 0.2755579868, 0.2755579868, 0.2755579868, 0.2755579868]", new int[] { 0, 2, 0, 0, 0, 0, 0, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.2967295769, 0.0321881838, 0.0321881838]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[1.0, 1.0, 0.292801787, 0.2139690117, 0.027286652, 0.027286652, 0.027286652, 0.027286652]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.2967295769, 0.0321881838, 0.0321881838]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[1.0, 1.0, 0.292801787, 0.2139690117, 0.027286652, 0.027286652, 0.027286652, 0.027286652]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.2967295769, 0.0321881838, 0.0321881838]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.2967295769, 0.0321881838, 0.0321881838]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                                              /* 30 */{ new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)), "occupation", "./data/adult.csv", "[0.2381886447, 0.2373814339, 0.1860658044, 0.1839097593, 0.0643524965, 0.0643524965, 0.0643524965, 0.0643524965]", new int[] { 0, 3, 0, 0, 1, 1, 1, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.3321564462, 0.3316048036, 0.2899546106, 0.2864628469, 0.1797626152, 0.1797626152, 0.1797626152, 0.1797626152]", new int[] { 0, 3, 0, 0, 1, 1, 1, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.5360166213, 0.5360166213, 0.3078622275, 0.2768495727, 0.2208311909, 0.2195394538, 0.1675207604, 0.0430342815]", new int[] { 1, 3, 0, 1, 2, 1, 1, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.5360166213, 0.5360166213, 0.3078622275, 0.2768495727, 0.2208311909, 0.2195394538, 0.1675207604, 0.0430342815]", new int[] { 1, 3, 0, 1, 2, 1, 1, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                                              /* 40 */{ new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                                              { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                                              /* 50 */{ weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.4444444444444444, 0.3837278695, 0.3686294012, 0.33782021527777784, 0.3333333333333333, 0.2984550096111111, 0.2222222222222222, 0.1111111111111111]", new int[] { 1, 4, 1, 2, 2, 1, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new KAnonymity(5)), "occupation", "./data/adult.csv", "[0.1485312645, 0.11552431683333335, 0.1111111111111111, 0.099020843, 0.08251736916666667, 0.06932099024444444, 0.06601389533333334, 0.0495104215]", new int[] { 1, 3, 0, 0, 0, 0, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.4444444444444444, 0.3837278695, 0.3686294012, 0.33782021527777784, 0.3333333333333333, 0.2984550096111111, 0.2222222222222222, 0.1111111111111111]", new int[] { 1, 4, 1, 2, 2, 1, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.2222222222222222, 0.19350814244444445, 0.1844373715, 0.14345128894444445, 0.12295824766666666, 0.1111111111111111, 0.0819721651111111, 0.06147912383333333]", new int[] { 1, 4, 0, 0, 1, 0, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2223118616111111, 0.2222222222222222, 0.20622957017777777, 0.20589870253333334, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.24791680480000003, 0.2222222222222222, 0.21964846616666667, 0.20686072982222223, 0.20449572306666666, 0.1111111111111111, 0.0462502486, 0.015416749533333333]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2223118616111111, 0.2222222222222222, 0.20622957017777777, 0.20589870253333334, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.24791680480000003, 0.2222222222222222, 0.21964846616666667, 0.20686072982222223, 0.20449572306666666, 0.1111111111111111, 0.0462502486, 0.015416749533333333]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2223118616111111, 0.2222222222222222, 0.20622957017777777, 0.20589870253333334, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2223118616111111, 0.2222222222222222, 0.20622957017777777, 0.20589870253333334, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              /* 60 */{ weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2222222222222222, 0.2037626446666667, 0.1925159692888889, 0.18116946266666667, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.2222222222222222, 0.22217064885555557, 0.2037626446666667, 0.1925159692888889, 0.18116946266666667, 0.1111111111111111, 0.0, 0.0]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2222222222222222, 0.2037626446666667, 0.1925159692888889, 0.18116946266666667, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.2222222222222222, 0.22217064885555557, 0.2037626446666667, 0.1925159692888889, 0.18116946266666667, 0.1111111111111111, 0.0, 0.0]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2222222222222222, 0.2037626446666667, 0.1925159692888889, 0.18116946266666667, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2222222222222222, 0.2037626446666667, 0.1925159692888889, 0.18116946266666667, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              /* 70 */{ weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.3347921225, 0.3333333333333333, 0.3221498721666667, 0.2937121764444444, 0.26039387305555556, 0.22319474833333333, 0.2222222222222222, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 0, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)), "occupation", "./data/adult.csv", "[0.1111111111111111, 0.0980306345, 0.07624604905555556, 0.06535375633333333, 0.06025241473333332, 0.054461463611111115, 0.04356917088888889, 0.032676878166666666]", new int[] { 1, 3, 0, 0, 0, 0, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.3347921225, 0.3333333333333333, 0.3221498721666667, 0.2937121764444444, 0.26039387305555556, 0.22319474833333333, 0.2222222222222222, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 0, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.17589341011111112, 0.1484026258, 0.11542426451111111, 0.1111111111111111, 0.09893508386666666, 0.06929789015555556, 0.06595672257777777, 0.04946754193333333]", new int[] { 1, 3, 0, 0, 1, 0, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2222222222222222, 0.21600512783333334, 0.20156694586666665, 0.197490761, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.23916311175555557, 0.2222222222222222, 0.21424728683333333, 0.2019835112444444, 0.19656479453333334, 0.1111111111111111, 0.0305251641, 0.010175054699999998]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2222222222222222, 0.21600512783333334, 0.20156694586666665, 0.197490761, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.23916311175555557, 0.2222222222222222, 0.21424728683333333, 0.2019835112444444, 0.19656479453333334, 0.1111111111111111, 0.0305251641, 0.010175054699999998]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2222222222222222, 0.21600512783333334, 0.20156694586666665, 0.197490761, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[1.0, 0.7777777777777778, 0.3333333333333333, 0.2222222222222222, 0.21600512783333334, 0.20156694586666665, 0.197490761, 0.1111111111111111]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                                              /* 80 */{ weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.34759666752222224, 0.33743821804444446, 0.3207015449, 0.29739356766666664, 0.2692089252777778, 0.24946932653333334, 0.17358582679999998, 0.07451590814444443]", new int[] { 1, 4, 1, 2, 2, 1, 1, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)), "occupation", "./data/adult.csv", "[0.12176904994444444, 0.1045686625, 0.08133118194444446, 0.06971244166666667, 0.06287238585555556, 0.04912232613333333, 0.04647496111111111, 0.03485622083333333]", new int[] { 1, 3, 0, 0, 1, 0, 0, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.34759666752222224, 0.33743821804444446, 0.3207015449, 0.29739356766666664, 0.2692089252777778, 0.24946932653333334, 0.17358582679999998, 0.07451590814444443]", new int[] { 1, 4, 1, 2, 2, 1, 1, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.1737941768888889, 0.15482836927777777, 0.15393566911111112, 0.14798658666666664, 0.1408285553333333, 0.05973065312222221, 0.0462502486, 0.015416749533333333]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.5151515151, 0.5057680631111111, 0.4497354497333333, 0.36988685811111116, 0.2098765432, 0.15062424484444442, 0.12428246119999999, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.1737941768888889, 0.15482836927777777, 0.15393566911111112, 0.14798658666666664, 0.1408285553333333, 0.05973065312222221, 0.0462502486, 0.015416749533333333]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.5151515151, 0.5057680631111111, 0.4497354497333333, 0.36988685811111116, 0.2098765432, 0.15062424484444442, 0.12428246119999999, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.1737941768888889, 0.15482836927777777, 0.15393566911111112, 0.14798658666666664, 0.1408285553333333, 0.05973065312222221, 0.0462502486, 0.015416749533333333]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.5151515151, 0.5057680631111111, 0.4497354497333333, 0.36988685811111116, 0.2098765432, 0.15062424484444442, 0.12428246119999999, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.5151515151, 0.5057680631111111, 0.4497354497333333, 0.36988685811111116, 0.2098765432, 0.15062424484444442, 0.12428246119999999, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false)) },
                                              /* 90 */{ weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },
                                              { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d, AggregateFunction.RANK)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("./data/adult_hierarchy_occupation.csv", StandardCharsets.UTF_8, ';'))), "occupation", "./data/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },
                                              
        });
    }
    
    /**
     * Apply weights to the test case.
     *
     * @param testcase
     * @return the test case passed to the method
     * @throws IOException
     */
    private static ARXAnonymizationTestCase weight(ARXAnonymizationTestCase testcase) throws IOException {
        
        // Create temporary data object
        Data data = Data.create(testcase.dataset, StandardCharsets.UTF_8, ';');
        DataHandle handle = data.getHandle();
        
        // Weight attributes according to their order in the dataset
        for (int i = 0; i < handle.getNumColumns(); i++) {
            testcase.config.setAttributeWeight(handle.getAttributeName(i), i + 1);
        }
        
        // Return argument
        return testcase;
    }
    
    /**
     * Creates a new instance.
     *
     * @param testCase
     */
    public TestUtilityMetricsLoss(final ARXAnonymizationTestCase testCase) {
        super(testCase);
    }
}
